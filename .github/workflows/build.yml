name: Build APK for Kotlin Android App
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Basic checkout using git commands
      - name: Checkout code
        run: |
          git clone https://github.com/${{ github.repository }}.git .
          git checkout ${{ github.ref_name }}
      
      # Debug - show content 
      - name: Debug repository content
        run: |
          echo "=== Current directory structure ==="
          ls -la
          echo "=== Gradle wrapper files ==="
          ls -la ./gradle/wrapper/ || echo "No wrapper directory found"
      
      # Setup Java manually
      - name: Set up JDK
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk
          java -version
      
      # Fix the gradle wrapper jar permissions
      - name: Fix permissions
        run: |
          # Make sure the gradlew script is executable
          chmod +x ./gradlew || echo "No gradlew found"
          
          # Fix jar file permissions - jar should NOT be executable
          if [ -f "./gradle/wrapper/gradle-wrapper.jar" ]; then
            chmod 644 ./gradle/wrapper/gradle-wrapper.jar
          fi
          
          # Show permissions after fix
          ls -la ./gradlew ./gradle/wrapper/ || echo "Files not found"
      
      # Try alternative approach if needed
      - name: Create new wrapper if needed
        if: failure()
        run: |
          # Install Gradle
          sudo apt-get install -y gradle
          
          # Generate new wrapper
          gradle wrapper
          
          # Set permissions correctly
          chmod +x ./gradlew
          chmod 644 ./gradle/wrapper/gradle-wrapper.jar
          
      # Build the APK with enhanced error handling
      - name: Build APK
        run: |
          ./gradlew assembleRelease --info
        env:
          API_KEY: ${{ secrets.API_KEY }}
          
      # Debug - list all APK files
      - name: Find APK files
        if: success() || failure()
        run: |
          echo "=== APK files ==="
          find . -name "*.apk" || echo "No APK files found"
          
      # Create a release tag (if on main branch)
      - name: Create Release Tag
        if: github.ref == 'refs/heads/main' && success()
        run: |
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "release-$BUILD_NUMBER" -m "Release build $BUILD_NUMBER"
          git push origin "release-$BUILD_NUMBER"
