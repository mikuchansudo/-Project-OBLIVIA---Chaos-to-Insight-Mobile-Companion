name: Build APK for Kotlin Android App
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Basic checkout using git commands
      - name: Checkout code
        run: |
          git clone https://github.com/${{ github.repository }}.git .
          git checkout ${{ github.ref_name }}
      
      # Debug - check repository content
      - name: Debug repository content
        run: |
          echo "=== Current directory structure ==="
          ls -la
          echo "=== Looking for gradlew files ==="
          find . -name "gradlew*"
          echo "=== Looking for gradle wrapper ==="
          find . -path "*/gradle/wrapper/*"
          
      # Setup Java manually
      - name: Set up JDK
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk
          java -version
      
      # Fix permissions for Gradle files
      - name: Fix Gradle permissions
        run: |
          # Find and fix permissions for any gradlew files
          find . -name "gradlew" -exec chmod +x {} \;
          # Fix permissions for gradle directory if it exists
          if [ -d "./gradle" ]; then
            chmod -R +rw ./gradle
          fi
          
      # Build the APK with enhanced error handling
      - name: Build APK
        run: |
          if [ -f "./gradlew" ]; then
            chmod +x ./gradlew
            ./gradlew assembleRelease --info
          else
            echo "ERROR: gradlew file not found!"
            # Try to find alternative locations
            GRADLEW_PATH=$(find . -name "gradlew" | head -n 1)
            if [ -n "$GRADLEW_PATH" ]; then
              echo "Found gradlew at: $GRADLEW_PATH"
              chmod +x "$GRADLEW_PATH"
              $GRADLEW_PATH assembleRelease --info
            else
              echo "No gradlew found in the repository"
              exit 1
            fi
          fi
        env:
          API_KEY: ${{ secrets.API_KEY }}
          
      # Debug - list all APK files
      - name: Find APK files
        if: success() || failure() # Run this step even if the previous step fails
        run: |
          echo "=== APK files ==="
          find . -name "*.apk" || echo "No APK files found"
          
      # Create a release tag (if on main branch)
      - name: Create Release Tag
        if: github.ref == 'refs/heads/main' && success()
        run: |
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "release-$BUILD_NUMBER" -m "Release build $BUILD_NUMBER"
          git push origin "release-$BUILD_NUMBER"
