name: Build for Kotlin Project
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Use checkout action to avoid authentication issues
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      # Setup Java manually
      - name: Set up JDK
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk
          java -version
      
      # Create a new gradlew script
      - name: Create build script
        run: |
          sudo apt-get install -y gradle
          echo '#!/bin/bash' > ./build-with-gradle.sh
          echo 'gradle "$@"' >> ./build-with-gradle.sh
          chmod +x ./build-with-gradle.sh
      
      # Examine build.gradle
      - name: Examine build files
        run: |
          echo "=== build.gradle content ==="
          cat build.gradle || echo "No build.gradle found"
          echo "=== Available tasks ==="
          ./build-with-gradle.sh tasks --all
      
      # Run all possible build tasks
      - name: Build project
        run: |
          # Try standard build task
          ./build-with-gradle.sh build --info || echo "Build task failed"
          
          # Try creating a jar file if available
          ./build-with-gradle.sh jar --info || echo "Jar task failed"
          
          # Try other tasks if available
          ./build-with-gradle.sh assemble --info || echo "Assemble task failed"
        env:
          API_KEY: ${{ secrets.API_KEY }}
          
      # Debug - list all output files
      - name: Find output files
        run: |
          echo "=== Build directory content ==="
          find . -path "*/build/*" -type f || echo "No build outputs found"
          echo "=== Specific artifacts ==="
          find . -name "*.jar" -o -name "*.apk" -o -name "*.war" -o -name "*.zip" || echo "No artifacts found"
          
      # Create a release tag (if on main branch)
      - name: Create Release Tag
        if: github.ref == 'refs/heads/main' && success()
        run: |
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag -a "release-$BUILD_NUMBER" -m "Release build $BUILD_NUMBER"
          git push origin "release-$BUILD_NUMBER"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
